#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Fri Aug 20 20:01:27 2021

@author: ghiggi
"""
##----------------------------------------------------------------------------.
import os
import sys
sys.path.append('../')
import shutil 
import tempfile
import subprocess
from modules.utils_config import read_config_file
from modules.utils_config import write_config_file
##----------------------------------------------------------------------------.
# Define fpaths

# data_dir = "/data/weather_prediction/data"
# data_dir = "/ltenas3/DeepSphere/data/preprocessed/ERA5_HRES"
# exp_dir = "/data/weather_prediction/experiments_GG"

data_dir = "/home/ghiggi/Projects/DeepSphere/data/toy_data/ERA5_HRES/"
exp_dir = "/home/ghiggi/Projects/DeepSphere/data/experiments_GG"
project_dir = "/home/ghiggi/Projects/deepsphere-weather"
tmp_dirpath = tempfile.mkdtemp()
cuda = '0'
force = True # If True, if model folder already exist, is replaced.

# Define python routine 
python_routine = os.path.join(project_dir,"scripts_training","train_predict_state.py")

#-----------------------------------------------------------------------------.
# Define config file path  
cfg_path = os.path.join(project_dir, "configs","UNetSpherical",
                        "Healpix_400km/MaxAreaPool-Graph_knn.json")


# Read general config
cfg = read_config_file(fpath=cfg_path)
# Optional configs 
cfg['dataloader_settings']["random_shuffling"] = False
cfg['training_settings']["seed_random_shuffling"] = 10
cfg['training_settings']["seed_model_weights"] = 10
cfg['training_settings']["deterministic_training"] = True

# Define custom prefix and suffix of model name 
# - Default: RNN-AR6-UNetSpherical-Healpix_400km-Graph_knn-k20-MaxAreaPooling
cfg['model_settings']["model_name_suffix"] = ""      # Model_1, Model_2
cfg['model_settings']["model_name_prefix"] = "State" # StateIncrement, Anomaly

# Save config path (temporary)
tmp_cfg_path = os.path.join(tmp_dirpath, "tmp_config.json")
write_config_file(cfg, tmp_cfg_path)

# Define command 
cmd = " ".join(["python", python_routine,
                '--config_file', tmp_cfg_path,
                '--cuda', cuda,
                '--data_dir', data_dir,
                '--exp_dir', exp_dir,
                '--force', str(force)])                  
subprocess.run(cmd, shell=True)
os.remove(tmp_cfg_path) 

##----------------------------------------------------------------------------.
# Remove temporary directory 
shutil.rmtree(tmp_dirpath)
